;******************************************************************************
; *
; Filename: EEPROMRecording.asm *
; Date: March 21, 2025 *
; Author: Andrew Keller *
; Company: Idaho State University *
; Description: When the record button is pressed, 10 keypad buttons are
;                recorded and stored in EEPROM for playback when play pressed *
; Github: https://github.com/andrew1593571/RCET3375.git *
; *
;******************************************************************************
  
    INCLUDE EEPROMRecordingSetup.inc
    #include "p16f883.inc"

; CONFIG1
; __config 0xE0F2
 __CONFIG _CONFIG1, _FOSC_XT & _WDTE_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
    
    ORG H'000'
    GOTO SETUP
    
    ORG H'004'
    GOTO INTERRUPT
    
SETUP:
    CALL INITIALIZE	    ;CALLS THE INITIALIZE SUBROUTINE IN INCLUDE FILE
    GOTO MAIN

READ_EEPROM:		    ;READS FROM EEPROM, RETURNS WITH VALUE IN W
    BANKSEL EECON1
    BCF EECON1, EEPGD	    ;CONFIGURES TO READ FROM DATA NOT PROGRAM MEMORY
    BSF EECON1, RD	    ;READ FROM EEPROM
    BANKSEL EEDAT
    MOVF EEDAT, W	    ;MOVE EEDAT TO W
    RETURN
    
WRITE_EEPROM:		    ;WRITES VALUE IN W TO EEPROM
    BANKSEL EEDAT
    MOVWF EEDAT		    ;MOVE W INTO EEDAT
    BANKSEL EECON1
    BCF EECON1, EEPGD	    ;POINT TO DATA MEMORY
    BSF EECON1, WREN	    ;CONFIGURE EEPROM FOR WRITE
    MOVLW H'55'
    MOVWF EECON2
    MOVLW H'AA'
    MOVWF EECON2
    BSF EECON1, WR	    ;BEGIN WRITE
WAITFORWRITE:
    BANKSEL PIR2
    BTFSS PIR2, EEIF	    ;POLL THE EEIF FLAG UNTIL WRITE IS COMPLETE
    GOTO WAITFORWRITE
    BCF PIR2, EEIF	    ;CLEAR EEIF FLAG
    BANKSEL EECON1
    BCF EECON1, WREN	    ;DISABLE WRITES
    RETURN
    
INTERRUPT:
    MOVWF WSTORE
    MOVF STATUS, W
    MOVWF STATUSSTORE
    BANKSEL PIR1
    BTFSC PIR1, TMR2IF	    ;CHECK FOR A TIMER INTERRUPT
    GOTO TMR2ISR
    GOTO RETURNFROMISR
    
TMR2ISR:
    BCF PIR1, TMR2IF
    DECFSZ TMRCOUNT
    GOTO RETURNFROMISR
    
    BANKSEL PORTA
    MOVLW TMRCOUNTRESET	    ;LOAD THE TIMER COUNT RESET VALUE INTO W
    MOVWF TMRCOUNT	    ;MOVE W INTO TMRCOUNT
    BTFSC RECMODE, 1	    ;IF PLAY FLAG IS HIGH, GOTO PLAYBACK
    GOTO PLAYBACK
    BTFSC RECMODE, 0   ;IF RECORD FLAG IS HIGH, GOTO TOGGLE_R
    GOTO RETURNFROMISR
    
    MOVF PORTC, W	    ;MOVE PORTC TO W
    BTFSS STATUS, Z	    ;IF W IS NOT ZERO, GOTO CLEARPORTC
    GOTO CLEARPORTC
    MOVLW MTX_S		    ;ELSE DISPLAY S IN DOT MATRIX
    MOVWF PORTC
    GOTO RETURNFROMISR
    
CLEARPORTC:
    CLRF PORTC
    GOTO RETURNFROMISR
    
PLAYBACK:
    MOVF PCOUNT, W	    ;MOVE PCOUNT INTO W
    BTFSS STATUS, Z	    ;IF PCOUNT IS NOT 0, SKIP TO DISPLAYNEXT
    GOTO DISPLAYNEXT
    BANKSEL EEADR
    CLRF EEADR		    ;SET EEPROM ADDRESS TO 0x00
    CALL READ_EEPROM	    ;CALL THE READ_EEPROM SUBROUTINE
    BANKSEL PCOUNT
    MOVWF PCOUNT	    ;MOVE W TO PCOUNT
    BANKSEL EEADR
    INCF EEADR		    ;INCREMENT EEADR
DISPLAYNEXT:
    CALL READ_EEPROM	    ;CALL READ_EEPROM SUBROUTINE
    BANKSEL PORTC
    MOVWF PORTC		    ;MOVE W TO PORTC
    BANKSEL EEADR
    INCF EEADR		    ;INCREMENT EEADR
    BANKSEL PCOUNT
    DECF PCOUNT		    ;DECREAMENT PCOUNT
    MOVF PCOUNT, W
    BTFSC STATUS, Z
    BCF RECMODE, 1
    GOTO RETURNFROMISR
    
RETURNFROMISR:
    MOVF STATUSSTORE, W
    MOVWF STATUS
    MOVF WSTORE, W
    RETFIE
    
WAITFORTOGGLE:
    BSF PORTA, RA5
    MOVLW B'00000011'	    ;MOVE A 1 INTO W IN EACH BIT FOR THE BUTTONS
    ANDWF PORTB, W	    ;AND PORTB WITH W
    BCF PORTA, RA5
    BTFSS STATUS, Z	    ;IS W ZERO (NO BUTTONS PRESSED)
    GOTO WAITFORTOGGLE	    ;NO, CHECK AGAIN
    RETURN
    
WAITFORRELEASE:
    MOVLW B'11110000'	    ;MOVE A 1 INTO W IN EACH BIT FOR THE BUTTONS
    ANDWF PORTB, W	    ;AND PORTB WITH W
    BTFSS STATUS, Z	    ;IS W ZERO (NO BUTTONS PRESSED)
    GOTO WAITFORRELEASE	    ;NO, CHECK AGAIN
    RETURN
    
MAINRECORD:  
    BANKSEL PORTC
    MOVLW MTX_R
    MOVWF PORTC
    CLRW		    ;CLEAR W
    
    BSF PORTA, RA0	    ;CHECK COLUMN 0 FOR BUTTON PRESSES
    BTFSC PORTB, RB4
    MOVLW MTX_ONE
    BTFSC PORTB, RB5
    MOVLW MTX_FOUR
    BTFSC PORTB, RB6
    MOVLW MTX_SEVEN
    BTFSC PORTB, RB7
    MOVLW MTX_ASTERISK
    MOVWF RECORDSTORE
    CALL WAITFORRELEASE
    MOVF RECORDSTORE, W
    BCF PORTA, RA0
    
    BSF PORTA, RA1	    ;CHECK COLUMN 1 FOR BUTTON PRESSES
    BTFSC PORTB, RB4
    MOVLW MTX_TWO
    BTFSC PORTB, RB5
    MOVLW MTX_FIVE
    BTFSC PORTB, RB6
    MOVLW MTX_EIGHT
    BTFSC PORTB, RB7
    MOVLW MTX_ZERO
    MOVWF RECORDSTORE
    CALL WAITFORRELEASE
    MOVF RECORDSTORE, W
    BCF PORTA, RA1
    
    BSF PORTA, RA2	    ;CHECK COLUMN 2 FOR BUTTON PRESSES
    BTFSC PORTB, RB4
    MOVLW MTX_THREE
    BTFSC PORTB, RB5
    MOVLW MTX_SIX
    BTFSC PORTB, RB6
    MOVLW MTX_NINE
    BTFSC PORTB, RB7
    MOVLW MTX_POUND
    MOVWF RECORDSTORE
    CALL WAITFORRELEASE
    MOVF RECORDSTORE, W
    BCF PORTA, RA2
    
    BSF PORTA, RA3	    ;CHECK COLUMN 3 FOR BUTTON PRESSES
    BTFSC PORTB, RB4
    MOVLW MTX_A
    BTFSC PORTB, RB5
    MOVLW MTX_B
    BTFSC PORTB, RB6
    MOVLW MTX_C
    BTFSC PORTB, RB7
    MOVLW MTX_D
    MOVWF RECORDSTORE
    CALL WAITFORRELEASE
    MOVF RECORDSTORE, W
    BCF PORTA, RA3
    
    MOVF RECORDSTORE, W
    BTFSC STATUS, Z	    ;IF W IS STILL ZERO, RETURN, ELSE CONTINUE
    RETURN
    
    INCF RCOUNT
    MOVF RCOUNT, W	    ;MOVE RCOUNT TO W
    BANKSEL EEADR
    MOVWF EEADR		    ;MOVE W TO EEADR
    
    MOVF RECORDSTORE, W	    ;MOVE RECORDSTORE TO W
    CALL WRITE_EEPROM
    BANKSEL EEADR	    ;CHANGE TO ADDRESS 0 OF EEPROM
    CLRF EEADR
    MOVF RCOUNT, W	    ;WRITE RCOUNT TO EEPROM
    CALL WRITE_EEPROM
    MOVLW H'0A'		    ;IF RCOUNT IS 10, CLEAR RECORD FLAG
    XORWF RCOUNT, W
    BTFSC STATUS, Z
    BCF RECMODE, 0
    BANKSEL PORTC
    CLRF PORTC
    RETURN
    
TOGGLERECORD:
    BTFSC RECMODE, 0
    GOTO STOPRECORD
    BSF RECMODE, 0
    CLRF RCOUNT
    RETURN
STOPRECORD:
    BCF RECMODE, 0
    CLRF PORTC
    RETURN
    
STARTPLAY:
    BSF RECMODE, 1
    RETURN
    
MAIN:
    BTFSC RECMODE, 1
    GOTO MAIN
    
    BTFSC PORTB, RB0	    ;IF THE RECORD BUTTON IS PRESSED, TOGGLE RECORD
    CALL TOGGLERECORD
    
    BTFSC PORTB, RB1	    ;IF THE PLAY BUTTON IS PRESSED, TOGGLE PLAY
    CALL STARTPLAY
    
    CALL WAITFORTOGGLE
    
    BTFSC RECMODE, 0
    CALL MAINRECORD
    GOTO MAIN
    END