;******************************************************************************
; *
; Filename: EEPROMRecording.asm *
; Date: March 21, 2025 *
; Author: Andrew Keller *
; Company: Idaho State University *
; Description: When the record button is pressed, 10 keypad buttons are
;                recorded and stored in EEPROM for playback when play pressed *
; Github: https://github.com/andrew1593571/RCET3375.git *
; *
;******************************************************************************
  
    INCLUDE EEPROMRecordingSetup.inc
    #include "p16f883.inc"

; CONFIG1
; __config 0xE0F2
 __CONFIG _CONFIG1, _FOSC_HS & _WDTE_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOREN_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF
; CONFIG2
; __config 0xFFFF
 __CONFIG _CONFIG2, _BOR4V_BOR40V & _WRT_OFF
    
    ORG H'000'
    GOTO SETUP
    
    ORG H'004'
    GOTO INTERRUPT
    
SETUP:
    CALL INITIALIZE	    ;CALLS THE INITIALIZE SUBROUTINE IN INCLUDE FILE
    GOTO MAIN

READ_EEPROM:		    ;READS FROM EEPROM, RETURNS WITH VALUE IN W
    BANKSEL EECON1
    BCF EECON1, EEPGD	    ;CONFIGURES TO READ FROM DATA NOT PROGRAM MEMORY
    BSF EECON1, RD	    ;READ FROM EEPROM
    BANKSEL EEDAT
    MOVF EEDAT, W	    ;MOVE EEDAT TO W
    RETURN
    
WRITE_EEPROM:		    ;WRITES VALUE IN W TO EEPROM
    BANKSEL EEDAT
    MOVWF EEDAT		    ;MOVE W INTO EEDAT
    BANKSEL EECON1
    BCF EECON1, EEPGD	    ;POINT TO DATA MEMORY
    BSF EECON1, WREN	    ;CONFIGURE EEPROM FOR WRITE
    MOVLW H'55'
    MOVWF EECON2
    MOVLW H'AA'
    MOVWF EECON2
    BSF EECON1, WR	    ;BEGIN WRITE
WAITFORWRITE:
    BANKSEL PIR2
    BTFSS PIR2, EEIF	    ;POLL THE EEIF FLAG UNTIL WRITE IS COMPLETE
    GOTO WAITFORWRITE
    BCF PIR2, EEIF	    ;CLEAR EEIF FLAG
    BANKSEL EECON1
    BCF EECON1, WREN	    ;DISABLE WRITES
    RETURN
    
INTERRUPT:
    BTFSC INTCON, RBIF	    ;CHECK FOR A CHANGE ON PORTB
    GOTO IOCISR
    BANKSEL PIR1
    BTFSC PIR1, TMR2IF	    ;CHECK FOR A TIMER INTERRUPT
    GOTO TMR2ISR
    RETFIE
    
IOCISR:
    BCF INTCON, RBIF	    ;CLEAR RBIF FLAG
    BTFSS RECMODE, RECORD   ;IF RECORD FLAG IS LOW, GOTO MODEBUTTONS
    GOTO MODEBUTTONS
    
    BTFSC PORTB, RB0
    GOTO STOPRECORD
    
    MOVF RCOUNT, W	    ;MOVE RCOUNT TO W
    BANKSEL EEADR
    MOVWF EEADR		    ;MOVE W TO EEADR
    
    BANKSEL PORTB	    ;IF A ROW IS HIGH, CHECK EACH COLUMN
    BTFSC PORTB, RB4
    GOTO KEYPADROWZERO
    BTFSC PORTB, RB5
    GOTO KEYPADROWONE
    BTFSC PORTB, RB6
    GOTO KEYPADROWTWO
    BTFSC PORTB, RB7
    GOTO KEYPADROWTHREE
    RETFIE
    
MODEBUTTONS:
    BTFSC PORTB, RB0	    ;IF RB0 IS HIGH, GOTO STARTRECORD
    GOTO STARTRECORD
    BTFSC PORTB, RB1	    ;IF RB1 IS HIGH, GOTO STARTPLAY
    GOTO STARTPLAY
    RETFIE
    
STARTRECORD:
    BANKSEL EEADR	    ;SET EEPROM ADDRESS TO RECORD COUNT ADDRESS (0x00)
    CLRF EEADR
    BANKSEL RCOUNT
    MOVLW H'01'		    ;MOVE A 1 INTO RCOUNT AND INTO EEPROM COUNT ADDRESS
    MOVWF RCOUNT
    CALL WRITE_EEPROM
    BANKSEL RECMODE
    BSF RECMODE, RECORD	    ;SET THE RECORD FLAG
    RETFIE
    
STARTPLAY:
    BSF RECMODE, PLAY	    ;SET THE PLAY FLAG
    RETFIE
    
STOPRECORD:
    BCF RECMODE, PLAY	    ;CLEAR PLAY FLAG
    BCF RECMODE, RECORD	    ;CLEAR RECORD FLAG
    RETFIE
    
KEYPADROWZERO:		    ;CHECK ROW 0 OF THE KEYPAD
    BTFSC PORTA, RA0
    MOVLW MTX_ONE
    BTFSC PORTA, RA1
    MOVLW MTX_TWO
    BTFSC PORTA, RA2
    MOVLW MTX_THREE
    BTFSC PORTA, RA3
    MOVLW MTX_A
    GOTO RECORDTOEEPROM
    
KEYPADROWONE:		    ;CHECK ROW 1 OF THE KEYPAD
    BTFSC PORTA, RA0
    MOVLW MTX_FOUR
    BTFSC PORTA, RA1
    MOVLW MTX_FIVE
    BTFSC PORTA, RA2
    MOVLW MTX_SIX
    BTFSC PORTA, RA3
    MOVLW MTX_B
    GOTO RECORDTOEEPROM
    
KEYPADROWTWO:		    ;CHECK ROW 2 OF THE KEYPAD
    BTFSC PORTA, RA0
    MOVLW MTX_SEVEN
    BTFSC PORTA, RA1
    MOVLW MTX_EIGHT
    BTFSC PORTA, RA2
    MOVLW MTX_NINE
    BTFSC PORTA, RA3
    MOVLW MTX_C
    GOTO RECORDTOEEPROM
    
KEYPADROWTHREE:		    ;CHECK ROW 3 OF THE KEYPAD
    BTFSC PORTA, RA0
    MOVLW MTX_ASTERISK
    BTFSC PORTA, RA1
    MOVLW MTX_ZERO
    BTFSC PORTA, RA2
    MOVLW MTX_POUND
    BTFSC PORTA, RA3
    MOVLW MTX_D
    
RECORDTOEEPROM:
    CALL WRITE_EEPROM	    ;WRITE W TO EEPROM
    BANKSEL PORTB
    INCF RCOUNT		    ;INCREASE RCOUNT AND WRITE IT TO 0x00 IN EEPROM
    MOVF RCOUNT, W
    BANKSEL EEADR
    CLRF EEADR
    CALL WRITE_EEPROM
    BANKSEL RCOUNT
    MOVLW H'0B'		    ;IF RCOUNT IS 11, CLEAR RECORD FLAG
    XORWF RCOUNT, W
    BTFSC STATUS, Z
    BCF RECMODE, RECORD
    RETFIE
    
TMR2ISR:
    BCF PIR1, TMR2IF
    DECFSZ TMRCOUNT
    GOTO CHANGEDISPLAY
    RETFIE
    
CHANGEDISPLAY:
    MOVLW TMRCOUNTRESET	    ;LOAD THE TIMER COUNT RESET VALUE INTO W
    MOVWF TMRCOUNT	    ;MOVE W INTO TMRCOUNT
    BTFSC RECMODE, PLAY	    ;IF PLAY FLAG IS HIGH, GOTO PLAYBACK
    GOTO PLAYBACK
    BTFSC RECMODE, RECORD   ;IF RECORD FLAG IS HIGH, GOTO TOGGLE_R
    GOTO TOGGLE_R
    
    MOVF PORTC, W	    ;MOVE PORTC TO W
    BTFSC STATUS, Z	    ;IF W IS ZERO, GOTO CLEARPORTC
    GOTO CLEARPORTC
    MOVLW MTX_S		    ;ELSE DISPLAY S IN DOT MATRIX
    MOVWF PORTC
    RETFIE
    
PLAYBACK:
    MOVF PCOUNT, W	    ;MOVE PCOUNT INTO W
    BTFSS STATUS, Z	    ;IF PCOUNT IS NOT 0, SKIP TO DISPLAYNEXT
    GOTO DISPLAYNEXT
    BANKSEL EEADR
    CLRF EEADR		    ;SET EEPROM ADDRESS TO 0x00
    CALL READ_EEPROM	    ;CALL THE READ_EEPROM SUBROUTINE
    BANKSEL PCOUNT
    MOVWF PCOUNT	    ;MOVE W TO PCOUNT
    BANKSEL EEADR
    INCF EEADR		    ;INCREMENT EEADR
DISPLAYNEXT:
    CALL READ_EEPROM	    ;CALL READ_EEPROM SUBROUTINE
    BANKSEL PORTC
    MOVWF PORTC		    ;MOVE W TO PORTC
    BANKSEL EEADR
    INCF EEADR		    ;INCREMENT EEADR
    BANKSEL PCOUNT
    DECF PCOUNT		    ;DECREAMENT PCOUNT
    RETFIE
    
TOGGLE_R:
    MOVF PORTC, W	    ;MOVE PORTC TO W
    BTFSC STATUS, Z	    ;IF W IS ZERO, GOTO CLEARPORTC
    GOTO CLEARPORTC
    MOVLW MTX_R		    ;ELSE DISPLAY R IN DOT MATRIX
    MOVWF PORTC
    RETFIE
    
CLEARPORTC:
    CLRF PORTC
    RETFIE
    
MAIN:
    
    GOTO MAIN
    END